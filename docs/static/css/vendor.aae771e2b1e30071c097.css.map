{"version":3,"sources":["webpack:///src/Mobile.vue","webpack:///src/components/StyleEditor.vue","webpack:///src/components/ResumeEditor.vue","webpack:///reset.css"],"names":[],"mappings":";AA0YA;EACA;EACA;EACA;AACA;AAEA;EACA;AACA;AACA;EACA;AACA;;ACxXA;AACA;AACA;EACA;AACA;;ACJA;AACA;AACA;EACA;AACA;AAEA;AACA;IACA;AACA;AACA;IACA;AACA;AACA;AC1CA,EAAE,SAAS,EAAE,UAAU,CAAC;AACxB,EAAE,sBAAsB,CAAC;AACzB,UAAU,sBAAsB,CAAC;AACjC,SAAS,sBAAsB,CAAC","file":"static/css/vendor.aae771e2b1e30071c097.css","sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <StyleEditor ref=\"styleEditor\" :code=\"currentStyle\"></StyleEditor>\r\n    <ResumeEditor\r\n      ref=\"resumeEditor\"\r\n      :markdown=\"currentMarkdown\"\r\n      :enableHtml=\"enableHtml\"\r\n    ></ResumeEditor>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport StyleEditor from \"./components/StyleEditor\";\r\nimport ResumeEditor from \"./components/ResumeEditor\";\r\nimport \"./assets/reset.css\";\r\nimport axios from \"axios\";\r\nexport default {\r\n  name: \"app\",\r\n  components: {\r\n    StyleEditor,\r\n    ResumeEditor,\r\n  },\r\n  data() {\r\n    return {\r\n      interval: 20,\r\n      currentStyle: \"\",\r\n      enableHtml: false,\r\n      fullStyle: [\r\n        `/*\r\n * Hello:I am Arch.run\r\n * I am good at tracing New Technology\r\n * Supported by: vue2.6+/webpack4+/babel7+\r\n * I will build a single page to gather some useful resource, in future\r\n * at the starting ,just a little trick.\r\n */\r\n\r\n/*\r\n *  OK,Let's begin\r\n *  首先给所有元素加上过渡效果\r\n */\r\n* {\r\n  transition: all 1s;\r\n}\r\n\r\n/*\r\n *  白色背景太单调了,我们来点背景\r\n */\r\nhtml {\r\n  color: rgb(222,222,222);\r\n  background: rgb(0,43,54);\r\n  overflow: hidden;\r\n}\r\n\r\nbody{\r\n  background: rgb(0,43,54);\r\n}\r\n\r\n/*\r\n * 美化一下工作区\r\n * 加上框框，整个区域居中，看着舒服\r\n * 在给框框加个3D阴影效果，高大上一点点\r\n */\r\n.styleEditor {\r\n  padding: .5em;\r\n  border: 1px solid;\r\n  overflow: auto;\r\n  margin: 2.5vh 5vw;\r\n  height: 90vh;\r\n  width: 90vw;\r\n  box-shadow: -4px 4px 2px 0 rgba(0,0,0,0.3);\r\n  }\r\n/*\r\n *代码高亮才不容易出错，给选择器，属性，标点符号，函数名啥的也都加上风格\r\n*/\r\n.token.selector{\r\n  color: rgb(133,153,0);\r\n}\r\n.token.property{\r\n  color: rgb(187,137,0);\r\n}\r\n.token.punctuation{\r\n  color: yellow;\r\n}\r\n.token.function{\r\n  color: rgb(42,161,152);\r\n}\r\n/*\r\n * 给编辑区来点鼠标悬浮效果，或许看着牛逼一点\r\n */\r\n.styleEditor:hover {\r\n  box-shadow: 0px 0px 40px 5px rgba(255,255,255,0.4);\r\n}\r\n\r\n/*\r\n * 高亮颜色好像不好看，换个风格，重新加一下\r\n */\r\n.token.comment { color: #857F6B; font-size: 12px; font-style: italic; }\r\n.token.selector { color: #E69F0F }\r\n.token.property { color: #64D5EA; }\r\n.token.punctuation { color: #ddd; }\r\n.token.function { color: #BE84F2; }\r\n\r\n\r\n/*\r\n * 加一些3D转换效果\r\n */\r\n.styleEditor {\r\n  position: fixed; left: 10px; top: 10px;\r\n  transform: rotateY(10deg) translateZ(-100px);\r\n}\r\n\r\n/*\r\n*emm，快要写正文了，缩小一下代码区，放到正中间上方，方便下面放内容\r\n*/\r\n.styleEditor {\r\n  height: 25vh;\r\n}\r\n\r\n/*\r\n*加点透视效果\r\n*/\r\nhtml {\r\n  perspective: 1000px;\r\n}\r\n\r\n/*\r\n * 这个斜斜的3D效果有点难看，还是再改一下\r\n * 重新设置code编辑区,再搞到3D效果\r\n */\r\n.styleEditor {\r\n  z-index: 10000;\r\n  position: fixed; left: 0; top: 0;\r\n  transform: rotateX(-30deg) translateZ(0px);\r\n}\r\n\r\n/*\r\n * 接下来,为正文编辑做点准备\r\n * 设置设置一下正文区位置\r\n * 还要允许滚动，不然内容太长就看不见了\r\n */\r\n .resumeEditor{\r\n  position: fixed;\r\n  top: 25vh; left: 0; right: 0;\r\n  padding: .5em;\r\n  margin: 15px;\r\n  height: 70vh;\r\n  border: 1px solid;\r\n  background: #FCFFDB; color: #222;\r\n  overflow: auto;\r\n  border-radius: 8px;\r\n}\r\n\r\n/*\r\n * 好，开始撸一下正文内容\r\n */\r\n\r\n`,\r\n        `\r\n/*\r\n * 这是 Markdown 格式的，需要变成更友好的格式\r\n * 我们阔以用开源工具翻译到HTML\r\n */\r\n`,\r\n        `\r\n/*\r\n * 显示Markdown格式更好看\r\n * 不过，格式还需要优化\r\n */\r\n.resumeEditor{\r\n  padding: 20px 4vw;\r\n}\r\n\r\n/*\r\n*标题不能太大\r\n*/\r\n.resumeEditor h1{\r\n  font-size:24px;\r\n  }\r\n\r\n/*\r\n*副标题也不能太了\r\n*/\r\n.resumeEditor h2{\r\n  display: inline-block;\r\n    margin: 20px 0 10px;\r\n  font-size: 20px;\r\n  color: #007419;\r\n  }\r\n\r\n/*\r\n*文本需要精致的排版\r\n*/\r\n.resumeEditor li{ font-size: 15px;}\r\n.resumeEditor li strong{ color:#003174;}\r\n.resumeEditor ul,.resumeEditor ol{ list-style: none; }\r\n.resumeEditor ul> li::before{ content: '•'; margin-right: .5em; }\r\n.resumeEditor ol { counter-reset: section; }\r\n.resumeEditor ol li::before {\r\n  counter-increment: section;\r\n  content: counters(section, \".\") \" \";\r\n  margin-right: .5em;\r\n}\r\n.resumeEditor blockquote {\r\n  margin: 1em;\r\n  padding: .5em;\r\n  background: #ddd;\r\n}\r\n\r\n.resumeEditor p{\r\n  font-size: 15px;\r\n  margin-bottom: 0.5em;\r\n}\r\n\r\n.resumeEditor p strong{\r\n  color:#003174;\r\n}\r\n\r\n/*\r\n*如果在未来加图片，也需要圆角和阴影\r\n*/\r\n.resumeEditor img {\r\n  width: 100%;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.25);\r\n  margin-top: 10px;\r\n}\r\n\r\nhr {\r\n  margin:20px 0;\r\n}\r\n\r\n/* 好了,Lets's review it ！*/\r\n\r\n* {\r\n  transition: all 1s;\r\n}\r\n.styleEditor {\r\n  opacity:0;\r\n}\r\n.resumeEditor {\r\n  top:0;\r\n  height:95vh;\r\n  z-index:10;\r\n}\r\n.background{\r\n  position:fixed;\r\n  left:0;\r\n  top:0;\r\n  height:100vh; width:100vh;\r\n  background: rgb(0,43,54);\r\n  z-index:-10;\r\n}\r\n\r\nh3{\r\n  margin-bottom: 10px;\r\n}\r\n\r\n`,\r\n      ],\r\n      currentMarkdown: \"\",\r\n      fullMarkdown: `\r\n\r\n## Arch.run\r\n----\r\n- Mobile：15*********;\r\n- Wechat：crazybber;\r\n- Site: https://arch.run;\r\n\r\n\r\n## 基本信息\r\n- Name: https://arch.run;\r\n- Education: Never had been to School;\r\n- Location: SH;\r\n- Work: Now you see i'm a simle site;\r\n\r\n## Skill Sets\r\n----\r\n* SVN | GIT | NGINX | APACHE\r\n* LINUX | windows | MacOS | Android | UOS\r\n* Kubernets | DOCKER\r\n* MQ|MQTT|Onvif|Video|Streaming\r\n* PIP | NPM | WEBPACK | GULP\r\n* Golang | C# | LARAVEL | SYMFONY\r\n* Angular | VUE | H5 | NODEJS\r\n\r\n\r\n## Resources\r\n----\r\n* [Go Exercise](https://github.com/crazybber/go-fucking-exercise)\r\n* [Go Patterns](https://github.com/crazybber/go-fucking-patterns)\r\n\r\n\r\n## Organizations\r\n----\r\n* [Open Source](http://github.com/gb28181)\r\n* [Community](https://github.com/micro-in-cn)\r\n\r\n## Links\r\n----\r\n* [GitHub](https://github.com/crazybber)\r\n\r\n  `,\r\n    };\r\n  },\r\n  created() {\r\n    this.makeResume();\r\n  },\r\n\r\n  methods: {\r\n    makeResume: async function() {\r\n      await this.progressivelyShowStyle(0);\r\n      this.interval = 0;\r\n      await this.progressivelyShowResume();\r\n      this.interval = 10;\r\n      await this.progressivelyShowStyle(1);\r\n      await this.showHtml();\r\n      await this.progressivelyShowStyle(2);\r\n    },\r\n    showHtml: function() {\r\n      return new Promise((resolve, reject) => {\r\n        this.enableHtml = true;\r\n        resolve();\r\n      });\r\n    },\r\n    progressivelyShowStyle(n) {\r\n      return new Promise((resolve, reject) => {\r\n        let interval = this.interval;\r\n        let showStyle = async function() {\r\n          let style = this.fullStyle[n];\r\n          if (!style) {\r\n            return;\r\n          }\r\n          // 计算前 n 个 style 的字符总数\r\n          let length = this.fullStyle\r\n            .filter((_, index) => index <= n)\r\n            .map((item) => item.length)\r\n            .reduce((p, c) => p + c, 0);\r\n          let prefixLength = length - style.length;\r\n          if (this.currentStyle.length < length) {\r\n            let l = this.currentStyle.length - prefixLength;\r\n            let char = style.substring(l, l + 1) || \" \";\r\n            this.currentStyle += char;\r\n            if (style.substring(l - 1, l) === \"\\n\" && this.$refs.styleEditor) {\r\n              this.$nextTick(() => {\r\n                this.$refs.styleEditor.goBottom();\r\n              });\r\n            }\r\n            setTimeout(showStyle, interval);\r\n          } else {\r\n            resolve();\r\n          }\r\n        }.bind(this);\r\n        showStyle();\r\n      });\r\n    },\r\n    progressivelyShowResume() {\r\n      let loadMD = () => {\r\n        const url = \"./content.md\";\r\n        axios.get(url).then((response) => {\r\n          this.fullMarkdown = response.data;\r\n        });\r\n      };\r\n      return new Promise((resolve, reject) => {\r\n        let length = this.fullMarkdown.length;\r\n        let interval = this.interval;\r\n        let showResume = () => {\r\n          if (this.currentMarkdown.length < length) {\r\n            this.currentMarkdown = this.fullMarkdown.substring(\r\n              0,\r\n              this.currentMarkdown.length + 1\r\n            );\r\n            let lastChar = this.currentMarkdown[\r\n              this.currentMarkdown.length - 1\r\n            ];\r\n            let prevChar = this.currentMarkdown[\r\n              this.currentMarkdown.length - 2\r\n            ];\r\n            if (prevChar === \"\\n\" && this.$refs.resumeEditor) {\r\n              this.$nextTick(() => this.$refs.resumeEditor.goBottom());\r\n            }\r\n            setTimeout(showResume, interval);\r\n          } else {\r\n            resolve();\r\n          }\r\n        };\r\n        loadMD();\r\n        showResume();\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#app {\r\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\nhtml {\r\n  min-height: 100%;\r\n}\r\n* {\r\n  box-sizing: border-box;\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"styleEditor\" ref=\"container\">\r\n    <div class=\"code\" v-html=\"codeInStyleTag\"></div>\r\n    <pre class=\"\" v-html=\"highlightedCode\"></pre>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Prism from \"prismjs\";\r\nexport default {\r\n  name: \"Editor\",\r\n  props: [\"code\"],\r\n  computed: {\r\n    highlightedCode: function() {\r\n      return Prism.highlight(this.code, Prism.languages.css);\r\n    },\r\n    codeInStyleTag: function() {\r\n      return `<style>${this.code}</style>`;\r\n    },\r\n  },\r\n  methods: {\r\n    goBottom() {\r\n      this.$refs.container.scrollTop = 100000;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@media (max-width: 700px) {\r\n}\r\n.code {\r\n  display: none;\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"resumeEditor\" :class=\"{ htmlMode: enableHtml }\" ref=\"container\">\r\n    <div v-if=\"enableHtml\" v-html=\"result\"></div>\r\n    <pre v-else>{{ result }}</pre>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport marked from \"marked\";\r\nexport default {\r\n  props: [\"markdown\", \"enableHtml\"],\r\n  name: \"ResumeEditor\",\r\n  computed: {\r\n    result: function() {\r\n      return this.enableHtml ? marked(this.markdown) : this.markdown;\r\n    },\r\n  },\r\n  methods: {\r\n    goBottom: function() {\r\n      this.$refs.container.scrollTop = 100000;\r\n    },\r\n    goTop: function() {\r\n      this.$refs.container.scrollTop = 0;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@media (max-width: 700px) {\r\n}\r\n.htmlMode {\r\n  animation: flip 2s;\r\n}\r\n\r\n@keyframes flip {\r\n  from {\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    opacity: 1;\r\n  }\r\n}\r\n</style>\r\n","*{margin: 0; padding: 0;}\r\n*{box-sizing: border-box;}\r\n*::before{box-sizing: border-box;}\r\n*::after{box-sizing: border-box;}"],"sourceRoot":""}